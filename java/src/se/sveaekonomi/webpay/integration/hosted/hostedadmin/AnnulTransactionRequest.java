package se.sveaekonomi.webpay.integration.hosted.hostedadmin;

import java.io.BufferedReader;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.StringReader;
import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;

import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.StatusLine;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpResponseException;
import org.apache.http.client.ResponseHandler;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.message.BasicNameValuePair;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import se.sveaekonomi.webpay.integration.config.ConfigurationProvider;
import se.sveaekonomi.webpay.integration.exception.SveaWebPayException;
import se.sveaekonomi.webpay.integration.response.hosted.hostedadminresponse.AnnulTransactionResponse;
import se.sveaekonomi.webpay.integration.util.constant.PAYMENTTYPE;

/**
 * AnnulTransaction is used to cancel (annul) a card transaction. 
 * The transaction must have status AUTHORIZED or CONFIRMED at Svea.
 * After a successful request the transaction will get the status ANNULLED.
 *
 * @author Kristian Grossman-Madsen
 */
public class AnnulTransactionRequest extends HostedAdminRequest {

	public String transactionId;
	
	public String getTransactionId() {
		return transactionId;
	}
	public void setTransactionId(String transactionId) {
		this.transactionId = transactionId;
	}	

	public AnnulTransactionRequest( ConfigurationProvider config ) {
		super( config, "annul" );
	}

    /** 
     * returns xml for hosted webservice "annul" request
     */
	public String getRequestMessageXml() {
		
	    XMLOutputFactory xmlof = XMLOutputFactory.newInstance();
		ByteArrayOutputStream os = new ByteArrayOutputStream();

		try {
			XMLStreamWriter xmlw = xmlof.createXMLStreamWriter(os, "UTF-8");

			xmlw.writeStartDocument("UTF-8", "1.0");
			xmlw.writeComment("Message generated by Integration package Java");
			xmlw.writeStartElement("annul");			
				xmlw.writeStartElement("transactionid");
					xmlw.writeCharacters( this.transactionId );
				xmlw.writeEndElement();
			xmlw.writeEndElement();			
			xmlw.writeEndDocument();			
			xmlw.close();				
		}
		catch (XMLStreamException e) {
			throw new SveaWebPayException("Error when building XML", e);
		}	

		try {
			return new String(os.toByteArray(), "UTF-8");
		}
		catch (UnsupportedEncodingException e) {
				throw new SveaWebPayException("Unsupported encoding UTF-8", e);
		}
	}
    
	// parse response message into AnnulTransactionResponse
	public AnnulTransactionResponse parseResponse( String message ) { 
		return new AnnulTransactionResponse( message, this.config.getSecretWord(PAYMENTTYPE.HOSTED,this.getCountryCode()) );
	}


}
