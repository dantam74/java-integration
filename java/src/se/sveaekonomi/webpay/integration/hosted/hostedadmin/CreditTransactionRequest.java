package se.sveaekonomi.webpay.integration.hosted.hostedadmin;

import java.io.ByteArrayOutputStream;
import java.io.UnsupportedEncodingException;

import javax.xml.stream.XMLOutputFactory;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.XMLStreamWriter;

import se.sveaekonomi.webpay.integration.exception.SveaWebPayException;
import se.sveaekonomi.webpay.integration.order.handle.CreditOrderBuilder;
import se.sveaekonomi.webpay.integration.response.hosted.hostedadminresponse.CreditTransactionResponse;
import se.sveaekonomi.webpay.integration.util.constant.PAYMENTTYPE;

/**
 * creditTransaction can be used to credit transactions. Only transactions that
 * have reached the status SUCCESS can be credited.
 * 
 * @author Kristian Grossman-Madsen
 */
public class CreditTransactionRequest extends HostedAdminRequest<CreditOrderBuilder> {

	public String transactionId;
	public long creditAmount;	// centesimal
	
	public long getCreditAmount() {
		return creditAmount;
	}
	public void setCreditAmount(long creditAmount) {
		this.creditAmount = creditAmount;
	}
	public String getTransactionId() {
		return transactionId;
	}
	public void setTransactionId(String transactionId) {
		this.transactionId = transactionId;
	}	
	

	public CreditTransactionRequest(CreditOrderBuilder order) {
		super( order, "credit" );
	}

    /** 
     * returns xml for hosted webservice "credit" request
     */
	public String getRequestMessageXml() {
		
	    XMLOutputFactory xmlof = XMLOutputFactory.newInstance();
		ByteArrayOutputStream os = new ByteArrayOutputStream();

		try {
			XMLStreamWriter xmlw = xmlof.createXMLStreamWriter(os, "UTF-8");

			xmlw.writeStartDocument("UTF-8", "1.0");
			xmlw.writeComment("Message generated by Integration package Java");
			xmlw.writeStartElement("credit");			
				xmlw.writeStartElement("transactionid");
					xmlw.writeCharacters( this.transactionId );
				xmlw.writeEndElement();
				xmlw.writeStartElement("amounttocredit");
					xmlw.writeCharacters( String.valueOf(this.getCreditAmount()) );
				xmlw.writeEndElement();
			xmlw.writeEndElement();			
			xmlw.writeEndDocument();			
			xmlw.close();				
		}
		catch (XMLStreamException e) {
			throw new SveaWebPayException("Error when building XML", e);
		}	

		try {
			return new String(os.toByteArray(), "UTF-8");
		}
		catch (UnsupportedEncodingException e) {
				throw new SveaWebPayException("Unsupported encoding UTF-8", e);
		}
	}
	
	// parse response message into CreditTransactionResponse
	@Override
	public CreditTransactionResponse parseResponse(String message) {
		return new CreditTransactionResponse(message, this.config.getSecretWord(
				PAYMENTTYPE.HOSTED, this.getCountryCode()));
	}	
}
